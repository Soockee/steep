before_script:
  # make gradle put artifacts into project directory so we can cache them
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - export TERM=dumb

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

services:
  - docker:dind

variables:
  UPSTREAM_IMAGE: $CI_REGISTRY/jobmanager/$CI_PROJECT_NAME
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2

build:
  image: openjdk:8
  stage: build
  script:
    - ./gradlew --no-daemon check installDist
  artifacts:
    paths:
      - ./build/install/
    expire_in: 30 minutes

build_image:
  image: docker:stable
  stage: deploy
  dependencies:
    - build
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker pull $UPSTREAM_IMAGE:latest || true
    - docker build --cache-from $UPSTREAM_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - if [ "${CI_COMMIT_REF_NAME}" != "master" ]; then docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME; fi;
    - if [ "${CI_COMMIT_REF_NAME}" == "master" ]; then docker push $CI_REGISTRY_IMAGE:latest; fi;
